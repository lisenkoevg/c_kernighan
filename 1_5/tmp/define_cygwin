#define BUFSIZ 1024
#define DEFAULT_LOCALE "C.UTF-8"
#define EOF (-1)
#define FILENAME_MAX __FILENAME_MAX__
#define FOPEN_MAX 20
#define L_ctermid 16
#define L_tmpnam FILENAME_MAX
#define NULL ((void *)0)
#define P_tmpdir "/tmp"
#define SEEK_CUR 1
#define SEEK_END 2
#define SEEK_SET 0
#define TMP_MAX 26
#define _ANSIDECL_H_ 
#define _ANSI_STDDEF_H 
#define _ATEXIT_DYNAMIC_ALLOC 1
#define _ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL}, 0, 0}}
#define _ATEXIT_SIZE 32
#define _ATFILE_SOURCE 1
#define _ATTRIBUTE(attrs) __attribute__ (attrs)
#define _BEGIN_STD_C 
#define _BSD_PTRDIFF_T_ 
#define _BSD_SIZE_T_ 
#define _BSD_SIZE_T_DEFINED_ 
#define _CLOCKID_T_ unsigned long
#define _CLOCK_T_ unsigned long
#define _CYGWIN_CONFIG_H 
#define _DEFAULT_SOURCE 1
#define _ELIDABLE_INLINE static __inline__
#define _END_STD_C 
#define _FSEEK_OPTIMIZATION 1
#define _FSTDIO 
#define _FVWRITE_IN_STREAMIO 1
#define _GCC_MAX_ALIGN_T 
#define _GCC_PTRDIFF_T 
#define _GCC_SIZE_T 
#define _GCC_WCHAR_T 
#define _GLIBC_EXTENSION 1
#define _GLOBAL_REENT (&_impure_data)
#define _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1
#define _HAVE_LONG_DOUBLE 1
#define _IOFBF 0
#define _IOLBF 1
#define _IONBF 2
#define _Kmax (sizeof (size_t) << 3)
#define _LOCK_RECURSIVE_T _LOCK_T
#define _LOCK_T_INITIALIZER ((_LOCK_T)19)
#define _LOCK_T_RECURSIVE_INITIALIZER ((_LOCK_T)18)
#define _LONG_DOUBLE long double
#define _LP64 1
#define _MACHINE__DEFAULT_TYPES_H 
#define _MACHINE__TYPES_H 
#define _MB_CAPABLE 1
#define _MB_EXTENDED_CHARSETS_ALL 1
#define _MB_EXTENDED_CHARSETS_ISO 1
#define _MB_EXTENDED_CHARSETS_WINDOWS 1
#define _MB_LEN_MAX 8
#define _NEWLIB_VERSION "4.4.0"
#define _NEWLIB_VERSION_H__ 1
#define _NOINLINE __attribute__ ((__noinline__))
#define _NOINLINE_STATIC _NOINLINE static
#define _NOTHROW 
#define _NULL 0
#define _Nonnull 
#define _Null_unspecified 
#define _Nullable 
#define _OFF_T_DECLARED 
#define _POINTER_INT long
#define _POSIX2_CHAR_TERM _POSIX2_VERSION
#define _POSIX2_C_BIND _POSIX2_VERSION
#define _POSIX2_C_DEV _POSIX2_VERSION
#define _POSIX2_C_VERSION _POSIX2_VERSION
#define _POSIX2_SW_DEV _POSIX2_VERSION
#define _POSIX2_UPE _POSIX2_VERSION
#define _POSIX2_VERSION 200809L
#define _POSIX_ADVISORY_INFO 200809L
#define _POSIX_ASYNCHRONOUS_IO 200809L
#define _POSIX_BARRIERS 200809L
#define _POSIX_CHOWN_RESTRICTED 1
#define _POSIX_CLOCK_SELECTION 200809L
#define _POSIX_CPUTIME 200809L
#define _POSIX_C_SOURCE 200809L
#define _POSIX_FSYNC 200809L
#define _POSIX_IPV6 200809L
#define _POSIX_JOB_CONTROL 1
#define _POSIX_MAPPED_FILES 200809L
#define _POSIX_MEMLOCK_RANGE 200809L
#define _POSIX_MEMORY_PROTECTION 200809L
#define _POSIX_MESSAGE_PASSING 200809L
#define _POSIX_MONOTONIC_CLOCK 200809L
#define _POSIX_NO_TRUNC 1
#define _POSIX_PRIORITY_SCHEDULING 200809L
#define _POSIX_RAW_SOCKETS 200809L
#define _POSIX_READER_WRITER_LOCKS 200809L
#define _POSIX_REALTIME_SIGNALS 200809L
#define _POSIX_REGEXP 1
#define _POSIX_SAVED_IDS 1
#define _POSIX_SEMAPHORES 200809L
#define _POSIX_SHARED_MEMORY_OBJECTS 200809L
#define _POSIX_SHELL 1
#define _POSIX_SOURCE 1
#define _POSIX_SPAWN 200809L
#define _POSIX_SPIN_LOCKS 200809L
#define _POSIX_SYNCHRONIZED_IO 200809L
#define _POSIX_THREADS 200809L
#define _POSIX_THREAD_ATTR_STACKADDR 200809L
#define _POSIX_THREAD_ATTR_STACKSIZE 200809L
#define _POSIX_THREAD_CPUTIME 200809L
#define _POSIX_THREAD_PRIORITY_SCHEDULING 200809L
#define _POSIX_THREAD_PROCESS_SHARED 200809L
#define _POSIX_THREAD_SAFE_FUNCTIONS 200809L
#define _POSIX_TIMEOUTS 200809L
#define _POSIX_TIMERS 200809L
#define _POSIX_V6_ILP32_OFF32 -1
#define _POSIX_V6_ILP32_OFFBIG -1
#define _POSIX_V6_LP64_OFF64 1
#define _POSIX_V6_LPBIG_OFFBIG 1
#define _POSIX_V7_ILP32_OFF32 _POSIX_V6_ILP32_OFF32
#define _POSIX_V7_ILP32_OFFBIG _POSIX_V6_ILP32_OFFBIG
#define _POSIX_V7_LP64_OFF64 _POSIX_V6_LP64_OFF64
#define _POSIX_V7_LPBIG_OFFBIG _POSIX_V6_LPBIG_OFFBIG
#define _POSIX_VDISABLE '\0'
#define _POSIX_VERSION 200809L
#define _PTRDIFF_T 
#define _PTRDIFF_T_ 
#define _PTRDIFF_T_DECLARED 
#define _RAND48_ADD (0x000b)
#define _RAND48_MULT_0 (0xe66d)
#define _RAND48_MULT_1 (0xdeec)
#define _RAND48_MULT_2 (0x0005)
#define _RAND48_SEED_0 (0x330e)
#define _RAND48_SEED_1 (0xabcd)
#define _RAND48_SEED_2 (0x1234)
#define _READ_WRITE_BUFSIZE_TYPE size_t
#define _READ_WRITE_RETURN_TYPE _ssize_t
#define _REENT (__getreent())
#define _REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctime_buf)
#define _REENT_ASCTIME_SIZE 26
#define _REENT_BACKWARD_BINARY_COMPAT 1
#define _REENT_C16RTOMB_STATE(ptr) ((ptr)->_new._reent._c16rtomb_state)
#define _REENT_C32RTOMB_STATE(ptr) ((ptr)->_new._reent._c32rtomb_state)
#define _REENT_C8RTOMB_STATE(ptr) ((ptr)->_new._reent._c8rtomb_state)
#define _REENT_CHECK_ASCTIME_BUF(ptr) 
#define _REENT_CHECK_EMERGENCY(ptr) 
#define _REENT_CHECK_MISC(ptr) 
#define _REENT_CHECK_MP(ptr) 
#define _REENT_CHECK_RAND48(ptr) 
#define _REENT_CHECK_SIGNAL_BUF(ptr) 
#define _REENT_CHECK_TM(ptr) 
#define _REENT_CHECK_VERIFY 1
#define _REENT_CLEANUP(_ptr) ((_ptr)->__cleanup)
#define _REENT_CVTBUF(_ptr) ((_ptr)->_cvtbuf)
#define _REENT_CVTLEN(_ptr) ((_ptr)->_cvtlen)
#define _REENT_EMERGENCY(_ptr) ((_ptr)->_emergency)
#define _REENT_EMERGENCY_SIZE 25
#define _REENT_ERRNO(_ptr) ((_ptr)->_errno)
#define _REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._getdate_err))
#define _REENT_INC(_ptr) ((_ptr)->_inc)
#define _REENT_INIT(var) { 0, &__sf[0], &__sf[1], &__sf[2], 0, "", _REENT_INIT_RESERVED_1 _NULL, _REENT_INIT_RESERVED_0 _NULL, _NULL, 0, _NULL, _NULL, 0, _NULL, { { _REENT_INIT_RESERVED_2 _NULL, "", {0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0, _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {0, {0}}, {0, {0}}, {0, {0}}, "", "", 0, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REENT_INIT_RESERVED_6_7 _NULL }
#define _REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(var))); _REENT_INIT_PTR_ZEROED(var); }
#define _REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = &__sf[0]; (var)->_stdout = &__sf[1]; (var)->_stderr = &__sf[2]; (var)->_new._reent._rand_next = 1; (var)->_new._reent._r48._seed[0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed[1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed[2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult[0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult[1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult[2] = _RAND48_MULT_2; (var)->_new._reent._r48._add = _RAND48_ADD; }
#define _REENT_INIT_RESERVED_0 0,
#define _REENT_INIT_RESERVED_1 0,
#define _REENT_INIT_RESERVED_2 0,
#define _REENT_INIT_RESERVED_6_7 _NULL, _ATEXIT_INIT,
#define _REENT_INIT_RESERVED_8 {_NULL, 0, _NULL},
#define _REENT_IS_NULL(_ptr) ((_ptr) == NULL)
#define _REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)
#define _REENT_LOCALE(_ptr) ((_ptr)->_locale)
#define _REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_state)
#define _REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrlen_state)
#define _REENT_MBRTOC16_STATE(ptr) ((ptr)->_new._reent._mbrtoc16_state)
#define _REENT_MBRTOC32_STATE(ptr) ((ptr)->_new._reent._mbrtoc32_state)
#define _REENT_MBRTOC8_STATE(ptr) ((ptr)->_new._reent._mbrtoc8_state)
#define _REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrtowc_state)
#define _REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mbsrtowcs_state)
#define _REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtowc_state)
#define _REENT_MP_FREELIST(ptr) ((ptr)->_freelist)
#define _REENT_MP_P5S(ptr) ((ptr)->_p5s)
#define _REENT_MP_RESULT(ptr) ((ptr)->_result)
#define _REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)
#define _REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._add)
#define _REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._mult)
#define _REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._seed)
#define _REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_next)
#define _REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_buf)
#define _REENT_SIGNAL_SIZE 24
#define _REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_signgam)
#define _REENT_SIG_FUNC(_ptr) ((_ptr)->_sig_func)
#define _REENT_SMALL_CHECK_INIT(ptr) 
#define _REENT_STDERR(_ptr) ((_ptr)->_stderr)
#define _REENT_STDIN(_ptr) ((_ptr)->_stdin)
#define _REENT_STDOUT(_ptr) ((_ptr)->_stdout)
#define _REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok_last)
#define _REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)
#define _REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrtomb_state)
#define _REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wcsrtombs_state)
#define _REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctomb_state)
#define _SIZET_ 
#define _SIZE_T 
#define _SIZE_T_ 
#define _SIZE_T_DECLARED 
#define _SIZE_T_DEFINED 
#define _SIZE_T_DEFINED_ 
#define _SSIZE_T_DECLARED 
#define _STDDEF_H 
#define _STDDEF_H_ 
#define _STDIO_BSD_SEMANTICS 1
#define _STDIO_H_ 
#define _SUPPORTS_ERREXCEPT 
#define _SYMSTR(x) #x
#define _SYS_CDEFS_H_ 
#define _SYS_FEATURES_H 
#define _SYS_LOCK_H_ 
#define _SYS_REENT_H_ 
#define _SYS_SIZE_T_H 
#define _SYS_STDIO_H_ 
#define _SYS__TYPES_H 
#define _TIMER_T_ unsigned long
#define _TIME_T_ long
#define _T_PTRDIFF 
#define _T_PTRDIFF_ 
#define _T_SIZE 
#define _T_SIZE_ 
#define _T_WCHAR 
#define _T_WCHAR_ 
#define _UNBUF_STREAM_OPT 1
#define _USE_GDTOA 
#define _USE_LONG_TIME_T 1
#define _VA_LIST_DEFINED 
#define _WANT_C99_TIME_FORMATS 1
#define _WANT_IO_C99_FORMATS 1
#define _WANT_IO_LONG_DOUBLE 1
#define _WANT_IO_LONG_LONG 1
#define _WANT_IO_POS_ARGS 1
#define _WANT_USE_GDTOA 1
#define _WCHAR_T 
#define _WCHAR_T_ 
#define _WCHAR_T_DECLARED 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_H 
#define _WIDE_ORIENT 1
#define _WINT_T 
#define _XBS5_ILP32_OFF32 _POSIX_V6_ILP32_OFF32
#define _XBS5_ILP32_OFFBIG _POSIX_V6_ILP32_OFFBIG
#define _XBS5_LP64_OFF64 _POSIX_V6_LP64_OFF64
#define _XBS5_LPBIG_OFFBIG _POSIX_V6_LPBIG_OFFBIG
#define __ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) cname
#define __ATFILE_VISIBLE 1
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __ATOMIC_HLE_ACQUIRE 65536
#define __ATOMIC_HLE_RELEASE 131072
#define __ATOMIC_RELAXED 0
#define __ATOMIC_RELEASE 3
#define __ATOMIC_SEQ_CST 5
#define __ATTRIBUTE_IMPURE_DATA__ 
#define __ATTRIBUTE_IMPURE_PTR__ 
#define __BEGIN_DECLS 
#define __BIGGEST_ALIGNMENT__ 16
#define __BSD_VISIBLE 1
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1
#define __CC_SUPPORTS_INLINE 1
#define __CC_SUPPORTS_VARADIC_XXX 1
#define __CC_SUPPORTS_WARNING 1
#define __CC_SUPPORTS___FUNC__ 1
#define __CC_SUPPORTS___INLINE 1
#define __CC_SUPPORTS___INLINE__ 1
#define __CHAR16_TYPE__ short unsigned int
#define __CHAR32_TYPE__ unsigned int
#define __CHAR_BIT__ 8
#define __CONCAT(x,y) __CONCAT1(x,y)
#define __CONCAT1(x,y) x ## y
#define __COPYRIGHT(s) struct __hack
#define __CYGTLS_PADSIZE__ 12800
#define __CYGWIN__ 1
#define __DBL_DECIMAL_DIG__ 17
#define __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
#define __DBL_DIG__ 15
#define __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __DBL_IS_IEC_60559__ 2
#define __DBL_MANT_DIG__ 53
#define __DBL_MAX_10_EXP__ 308
#define __DBL_MAX_EXP__ 1024
#define __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define __DBL_MIN_10_EXP__ (-307)
#define __DBL_MIN_EXP__ (-1021)
#define __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
#define __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define __DEC128_EPSILON__ 1E-33DL
#define __DEC128_MANT_DIG__ 34
#define __DEC128_MAX_EXP__ 6145
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC128_MIN_EXP__ (-6142)
#define __DEC128_MIN__ 1E-6143DL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __DEC32_EPSILON__ 1E-6DF
#define __DEC32_MANT_DIG__ 7
#define __DEC32_MAX_EXP__ 97
#define __DEC32_MAX__ 9.999999E96DF
#define __DEC32_MIN_EXP__ (-94)
#define __DEC32_MIN__ 1E-95DF
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __DEC64_EPSILON__ 1E-15DD
#define __DEC64_MANT_DIG__ 16
#define __DEC64_MAX_EXP__ 385
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __DEC64_MIN_EXP__ (-382)
#define __DEC64_MIN__ 1E-383DD
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DECIMAL_BID_FORMAT__ 1
#define __DECIMAL_DIG__ 21
#define __DECONST(type,var) ((type)(__uintptr_t)(const void *)(var))
#define __DEC_EVAL_METHOD__ 2
#define __DEQUALIFY(type,var) ((type)(__uintptr_t)(const volatile void *)(var))
#define __DEVOLATILE(type,var) ((type)(__uintptr_t)(volatile void *)(var))
#define __DOTS , ...
#define __DYNAMIC_REENT__ 
#define __END_DECLS 
#define __EXPORT 
#define __FBSDID(s) struct __hack
#define __FILENAME_MAX__ 4096
#define __FILE_defined 
#define __FINITE_MATH_ONLY__ 0
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLT128_DECIMAL_DIG__ 36
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
#define __FLT128_DIG__ 33
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
#define __FLT128_HAS_DENORM__ 1
#define __FLT128_HAS_INFINITY__ 1
#define __FLT128_HAS_QUIET_NAN__ 1
#define __FLT128_IS_IEC_60559__ 2
#define __FLT128_MANT_DIG__ 113
#define __FLT128_MAX_10_EXP__ 4932
#define __FLT128_MAX_EXP__ 16384
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define __FLT128_MIN_10_EXP__ (-4931)
#define __FLT128_MIN_EXP__ (-16381)
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define __FLT32X_DECIMAL_DIG__ 17
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
#define __FLT32X_DIG__ 15
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
#define __FLT32X_HAS_DENORM__ 1
#define __FLT32X_HAS_INFINITY__ 1
#define __FLT32X_HAS_QUIET_NAN__ 1
#define __FLT32X_IS_IEC_60559__ 2
#define __FLT32X_MANT_DIG__ 53
#define __FLT32X_MAX_10_EXP__ 308
#define __FLT32X_MAX_EXP__ 1024
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __FLT32X_MIN_10_EXP__ (-307)
#define __FLT32X_MIN_EXP__ (-1021)
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __FLT32_DECIMAL_DIG__ 9
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
#define __FLT32_DIG__ 6
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
#define __FLT32_HAS_DENORM__ 1
#define __FLT32_HAS_INFINITY__ 1
#define __FLT32_HAS_QUIET_NAN__ 1
#define __FLT32_IS_IEC_60559__ 2
#define __FLT32_MANT_DIG__ 24
#define __FLT32_MAX_10_EXP__ 38
#define __FLT32_MAX_EXP__ 128
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __FLT32_MIN_10_EXP__ (-37)
#define __FLT32_MIN_EXP__ (-125)
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __FLT64X_DECIMAL_DIG__ 21
#define __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
#define __FLT64X_DIG__ 18
#define __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
#define __FLT64X_HAS_DENORM__ 1
#define __FLT64X_HAS_INFINITY__ 1
#define __FLT64X_HAS_QUIET_NAN__ 1
#define __FLT64X_IS_IEC_60559__ 2
#define __FLT64X_MANT_DIG__ 64
#define __FLT64X_MAX_10_EXP__ 4932
#define __FLT64X_MAX_EXP__ 16384
#define __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __FLT64X_MIN_10_EXP__ (-4931)
#define __FLT64X_MIN_EXP__ (-16381)
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
#define __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __FLT64_DECIMAL_DIG__ 17
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
#define __FLT64_DIG__ 15
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
#define __FLT64_HAS_DENORM__ 1
#define __FLT64_HAS_INFINITY__ 1
#define __FLT64_HAS_QUIET_NAN__ 1
#define __FLT64_IS_IEC_60559__ 2
#define __FLT64_MANT_DIG__ 53
#define __FLT64_MAX_10_EXP__ 308
#define __FLT64_MAX_EXP__ 1024
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
#define __FLT64_MIN_10_EXP__ (-307)
#define __FLT64_MIN_EXP__ (-1021)
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
#define __FLT_DIG__ 6
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
#define __FLT_EVAL_METHOD__ 0
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FLT_IS_IEC_60559__ 2
#define __FLT_MANT_DIG__ 24
#define __FLT_MAX_10_EXP__ 38
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
#define __FLT_RADIX__ 2
#define __FXSR__ 1
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GCC_IEC_559 2
#define __GCC_IEC_559_COMPLEX 2
#define __GNUCLIKE_ASM 3
#define __GNUCLIKE_BUILTIN_CONSTANT_P 1
#define __GNUCLIKE_BUILTIN_MEMCPY 1
#define __GNUCLIKE_BUILTIN_NEXT_ARG 1
#define __GNUCLIKE_BUILTIN_STDARG 1
#define __GNUCLIKE_BUILTIN_VAALIST 1
#define __GNUCLIKE_BUILTIN_VARARGS 1
#define __GNUCLIKE_CTOR_SECTION_HANDLING 1
#define __GNUCLIKE_MATH_BUILTIN_CONSTANTS 
#define __GNUCLIKE_MATH_BUILTIN_RELOPS 
#define __GNUCLIKE___SECTION 1
#define __GNUCLIKE___TYPEOF 1
#define __GNUC_EXECUTION_CHARSET_NAME "UTF-8"
#define __GNUC_MINOR__ 4
#define __GNUC_PATCHLEVEL__ 0
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define __GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)
#define __GNUC_STDC_INLINE__ 1
#define __GNUC_VA_LIST 
#define __GNUC_VA_LIST_COMPATIBILITY 1
#define __GNUC_WIDE_EXECUTION_CHARSET_NAME "UTF-16LE"
#define __GNUC__ 11
#define __GNU_VISIBLE 0
#define __GXX_ABI_VERSION 1016
#define __GXX_MERGED_TYPEINFO_NAMES 0
#define __GXX_TYPEINFO_EQUALITY_INLINE 0
#define __HAVE_LOCALE_INFO_EXTENDED__ 1
#define __HAVE_LOCALE_INFO__ 1
#define __HAVE_SPECULATION_SAFE_VALUE 1
#define __IEEE_LITTLE_ENDIAN 
#define __IMPORT __declspec(dllimport)
#define __INT16_C(c) c
#define __INT16_MAX__ 0x7fff
#define __INT16_TYPE__ short int
#define __INT32_C(c) c
#define __INT32_MAX__ 0x7fffffff
#define __INT32_TYPE__ int
#define __INT64_C(c) c ## L
#define __INT64_MAX__ 0x7fffffffffffffffL
#define __INT64_TYPE__ long int
#define __INT8_C(c) c
#define __INT8_MAX__ 0x7f
#define __INT8_TYPE__ signed char
#define __INTMAX_C(c) c ## L
#define __INTMAX_MAX__ 0x7fffffffffffffffL
#define __INTMAX_TYPE__ long int
#define __INTMAX_WIDTH__ 64
#define __INTPTR_MAX__ 0x7fffffffffffffffL
#define __INTPTR_TYPE__ long int
#define __INTPTR_WIDTH__ 64
#define __INT_FAST16_MAX__ 0x7fffffffffffffffL
#define __INT_FAST16_TYPE__ long int
#define __INT_FAST16_WIDTH__ 64
#define __INT_FAST32_MAX__ 0x7fffffffffffffffL
#define __INT_FAST32_TYPE__ long int
#define __INT_FAST32_WIDTH__ 64
#define __INT_FAST64_MAX__ 0x7fffffffffffffffL
#define __INT_FAST64_TYPE__ long int
#define __INT_FAST64_WIDTH__ 64
#define __INT_FAST8_MAX__ 0x7f
#define __INT_FAST8_TYPE__ signed char
#define __INT_FAST8_WIDTH__ 8
#define __INT_LEAST16_MAX__ 0x7fff
#define __INT_LEAST16_TYPE__ short int
#define __INT_LEAST16_WIDTH__ 16
#define __INT_LEAST32_MAX__ 0x7fffffff
#define __INT_LEAST32_TYPE__ int
#define __INT_LEAST32_WIDTH__ 32
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffL
#define __INT_LEAST64_TYPE__ long int
#define __INT_LEAST64_WIDTH__ 64
#define __INT_LEAST8_MAX__ 0x7f
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST8_WIDTH__ 8
#define __INT_MAX__ 0x7fffffff
#define __INT_WCHAR_T_H 
#define __INT_WIDTH__ 32
#define __ISO_C_VISIBLE 2011
#define __LARGEFILE_VISIBLE 0
#define __LDBL_DECIMAL_DIG__ 21
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
#define __LDBL_DIG__ 18
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __LDBL_IS_IEC_60559__ 2
#define __LDBL_MANT_DIG__ 64
#define __LDBL_MAX_10_EXP__ 4932
#define __LDBL_MAX_EXP__ 16384
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
#define __LDBL_MIN_10_EXP__ (-4931)
#define __LDBL_MIN_EXP__ (-16381)
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
#define __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
#define __LINUX_ERRNO_EXTENSIONS__ 1
#define __LOCK_INIT(CLASS,NAME) CLASS _LOCK_T NAME = _LOCK_T_INITIALIZER;
#define __LOCK_INIT_RECURSIVE(CLASS,NAME) CLASS _LOCK_T NAME = _LOCK_T_RECURSIVE_INITIALIZER;
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __LONG_LONG_WIDTH__ 64
#define __LONG_MAX__ 0x7fffffffffffffffL
#define __LONG_WIDTH__ 64
#define __LP64__ 1
#define __Long int
#define __MISC_VISIBLE 1
#define __MMX_WITH_SSE__ 1
#define __MMX__ 1
#define __NEWLIB_H__ 1
#define __NEWLIB_MINOR__ 4
#define __NEWLIB_PATCHLEVEL__ 0
#define __NEWLIB__ 4
#define __NO_INLINE__ 1
#define __NULLABILITY_PRAGMA_POP 
#define __NULLABILITY_PRAGMA_PUSH 
#define __OBSOLETE_MATH __OBSOLETE_MATH_DEFAULT
#define __OBSOLETE_MATH_DEFAULT 0
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412
#define __P(protos) protos
#define __PIC__ 1
#define __PMT(args) args
#define __POSIX_VISIBLE 200809
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL
#define __PTRDIFF_T 
#define __PTRDIFF_TYPE__ long int
#define __PTRDIFF_WIDTH__ 64
#define __RAND_MAX 0x7fffffff
#define __RCSID(s) struct __hack
#define __RCSID_SOURCE(s) struct __hack
#define __REGISTER_PREFIX__ 
#define __SAPP 0x0100
#define __SCCSID(s) struct __hack
#define __SCHAR_MAX__ 0x7f
#define __SCHAR_WIDTH__ 8
#define __SCLE 0x4000
#define __SEG_FS 1
#define __SEG_GS 1
#define __SEH__ 1
#define __SEOF 0x0020
#define __SERR 0x0040
#define __SHRT_MAX__ 0x7fff
#define __SHRT_WIDTH__ 16
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __SIG_ATOMIC_TYPE__ int
#define __SIG_ATOMIC_WIDTH__ 32
#define __SIZEOF_DOUBLE__ 8
#define __SIZEOF_FLOAT128__ 16
#define __SIZEOF_FLOAT80__ 16
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_INT128__ 16
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG_DOUBLE__ 16
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_LONG__ 8
#define __SIZEOF_POINTER__ 8
#define __SIZEOF_PTRDIFF_T__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_SIZE_T__ 8
#define __SIZEOF_WCHAR_T__ 2
#define __SIZEOF_WINT_T__ 4
#define __SIZE_MAX__ 0xffffffffffffffffUL
#define __SIZE_T 
#define __SIZE_TYPE__ long unsigned int
#define __SIZE_T__ 
#define __SIZE_WIDTH__ 64
#define __SL64 0x8000
#define __SLBF 0x0001
#define __SMBF 0x0080
#define __SNBF 0x0002
#define __SNLK 0x0001
#define __SNPT 0x0800
#define __SOFF 0x1000
#define __SOPT 0x0400
#define __SORD 0x2000
#define __SRD 0x0004
#define __SRW 0x0010
#define __SSE2_MATH__ 1
#define __SSE2__ 1
#define __SSE_MATH__ 1
#define __SSE__ 1
#define __SSP_FORTIFY_LEVEL 0
#define __SSTR 0x0200
#define __STDC_HOSTED__ 1
#define __STDC_ISO_10646__ 201806L
#define __STDC_UTF_16__ 1
#define __STDC_UTF_32__ 1
#define __STDC_VERSION__ 201710L
#define __STDC__ 1
#define __STRING(x) #x
#define __SVID_VISIBLE 1
#define __SWID 0x2000
#define __SWR 0x0008
#define __SYS_CONFIG_H__ 
#define __THROW 
#define __TM_GMTOFF tm_gmtoff
#define __TM_ZONE tm_zone
#define __UINT16_C(c) c
#define __UINT16_MAX__ 0xffff
#define __UINT16_TYPE__ short unsigned int
#define __UINT32_C(c) c ## U
#define __UINT32_MAX__ 0xffffffffU
#define __UINT32_TYPE__ unsigned int
#define __UINT64_C(c) c ## UL
#define __UINT64_MAX__ 0xffffffffffffffffUL
#define __UINT64_TYPE__ long unsigned int
#define __UINT8_C(c) c
#define __UINT8_MAX__ 0xff
#define __UINT8_TYPE__ unsigned char
#define __UINTMAX_C(c) c ## UL
#define __UINTMAX_MAX__ 0xffffffffffffffffUL
#define __UINTMAX_TYPE__ long unsigned int
#define __UINTPTR_MAX__ 0xffffffffffffffffUL
#define __UINTPTR_TYPE__ long unsigned int
#define __UINT_FAST16_MAX__ 0xffffffffffffffffUL
#define __UINT_FAST16_TYPE__ long unsigned int
#define __UINT_FAST32_MAX__ 0xffffffffffffffffUL
#define __UINT_FAST32_TYPE__ long unsigned int
#define __UINT_FAST64_MAX__ 0xffffffffffffffffUL
#define __UINT_FAST64_TYPE__ long unsigned int
#define __UINT_FAST8_MAX__ 0xff
#define __UINT_FAST8_TYPE__ unsigned char
#define __UINT_LEAST16_MAX__ 0xffff
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define __UINT_LEAST32_TYPE__ unsigned int
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
#define __UINT_LEAST64_TYPE__ long unsigned int
#define __UINT_LEAST8_MAX__ 0xff
#define __UINT_LEAST8_TYPE__ unsigned char
#define __USER_LABEL_PREFIX__ 
#define __VALIST __gnuc_va_list
#define __VERSION__ "11.4.0"
#define __WCHAR_MAX__ 0xffff
#define __WCHAR_MIN__ 0
#define __WCHAR_T 
#define __WCHAR_TYPE__ short unsigned int
#define __WCHAR_T__ 
#define __WCHAR_WIDTH__ 16
#define __WINT_MAX__ 0xffffffffU
#define __WINT_MIN__ 0U
#define __WINT_TYPE__ unsigned int
#define __WINT_WIDTH__ 32
#define __XSI_VISIBLE 0
#define __XSTRING(x) __STRING(x)
#define ___int16_t_defined 1
#define ___int32_t_defined 1
#define ___int64_t_defined 1
#define ___int8_t_defined 1
#define ___int_least16_t_defined 1
#define ___int_least32_t_defined 1
#define ___int_least64_t_defined 1
#define ___int_least8_t_defined 1
#define ___int_ptrdiff_t_h 
#define ___int_size_t_h 
#define ___int_wchar_t_h 
#define __align_down(x,y) __builtin_align_down(x, y)
#define __align_up(x,y) __builtin_align_up(x, y)
#define __aligned(x) __attribute__((__aligned__(x)))
#define __alloc_align(x) __attribute__((__alloc_align__(x)))
#define __alloc_size(x) __attribute__((__alloc_size__(x)))
#define __alloc_size2(n,x) __attribute__((__alloc_size__(n, x)))
#define __always_inline __inline__ __attribute__((__always_inline__))
#define __amd64 1
#define __amd64__ 1
#define __arg_type_tag(arg_kind,arg_idx,type_tag_idx) 
#define __asserts_exclusive(...) __lock_annotate(assert_exclusive_lock(__VA_ARGS__))
#define __asserts_shared(...) __lock_annotate(assert_shared_lock(__VA_ARGS__))
#define __attribute_format_strfmon__(a,b) 
#define __attribute_malloc__ 
#define __attribute_pure__ 
#define __bounded 
#define __builtin_align_down(x,align) ((__typeof__(x))((x)&(~((align)-1))))
#define __builtin_align_up(x,align) ((__typeof__(x))(((__uintptr_t)(x)+((align)-1))&(~((align)-1))))
#define __builtin_is_aligned(x,align) (((__uintptr_t)x & ((align) - 1)) == 0)
#define __cdecl __attribute__((__cdecl__))
#define __code_model_medium__ 1
#define __compiler_membar() __asm __volatile(" " : : : "memory")
#define __const const
#define __containerof(x,s,m) ({ const volatile __typeof(((s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volatile char *)__x - __offsetof(s, m));})
#define __datatype_type_tag(kind,type) 
#define __dead2 __attribute__((__noreturn__))
#define __declspec(x) __attribute__((x))
#define __exported __attribute__((__visibility__("default")))
#define __fastcall __attribute__((__fastcall__))
#define __flexarr [0]
#define __format_arg(fmtarg) __attribute__((__format_arg__ (fmtarg)))
#define __generic(expr,t,yes,no) _Generic(expr, t: yes, default: no)
#define __guarded_by(x) __lock_annotate(guarded_by(x))
#define __has_extension __has_feature
#define __has_feature(x) 0
#define __have_long64 1
#define __have_longlong64 1
#define __hidden 
#define __is_aligned(x,y) __builtin_is_aligned(x, y)
#define __k8 1
#define __k8__ 1
#define __lock_acquire(__lock) __cygwin_lock_lock(&__lock)
#define __lock_acquire_recursive(__lock) __cygwin_lock_lock(&__lock)
#define __lock_annotate(x) 
#define __lock_close(__lock) __cygwin_lock_fini(&__lock)
#define __lock_close_recursive(__lock) __cygwin_lock_fini(&__lock)
#define __lock_init(__lock) __cygwin_lock_init(&__lock)
#define __lock_init_recursive(__lock) __cygwin_lock_init_recursive(&__lock)
#define __lock_release(__lock) __cygwin_lock_unlock(&__lock)
#define __lock_release_recursive(__lock) __cygwin_lock_unlock(&__lock)
#define __lock_try_acquire(lock) __cygwin_lock_trylock(&__lock)
#define __lock_try_acquire_recursive(lock) __cygwin_lock_trylock(&__lock)
#define __lockable __lock_annotate(lockable)
#define __locks_exclusive(...) __lock_annotate(exclusive_lock_function(__VA_ARGS__))
#define __locks_shared(...) __lock_annotate(shared_lock_function(__VA_ARGS__))
#define __long_double_t long double
#define __machine_blkcnt_t_defined 
#define __machine_blksize_t_defined 
#define __machine_dev_t_defined 
#define __machine_fsblkcnt_t_defined 
#define __machine_fsfilcnt_t_defined 
#define __machine_gid_t_defined 
#define __machine_ino_t_defined 
#define __machine_key_t_defined 
#define __machine_sa_family_t_defined 
#define __machine_socklen_t_defined 
#define __machine_uid_t_defined 
#define __malloc_like __attribute__((__malloc__))
#define __min_size(x) static (x)
#define __no_lock_analysis __lock_annotate(no_thread_safety_analysis)
#define __noinline __attribute__ ((__noinline__))
#define __nonnull(x) __attribute__((__nonnull__ x))
#define __nonnull_all __attribute__((__nonnull__))
#define __nosanitizeaddress 
#define __nosanitizememory 
#define __nosanitizethread 
#define __null_sentinel __attribute__((__sentinel__))
#define __offsetof(type,field) offsetof(type, field)
#define __packed __attribute__((__packed__))
#define __pic__ 1
#define __predict_false(exp) __builtin_expect((exp), 0)
#define __predict_true(exp) __builtin_expect((exp), 1)
#define __printf0like(fmtarg,firstvararg) 
#define __printflike(fmtarg,firstvararg) __attribute__((__format__ (__printf__, fmtarg, firstvararg)))
#define __pt_guarded_by(x) __lock_annotate(pt_guarded_by(x))
#define __ptr_t void *
#define __ptrvalue 
#define __pure __attribute__((__pure__))
#define __pure2 __attribute__((__const__))
#define __rangeof(type,start,end) (__offsetof(type, end) - __offsetof(type, start))
#define __requires_exclusive(...) __lock_annotate(exclusive_locks_required(__VA_ARGS__))
#define __requires_shared(...) __lock_annotate(shared_locks_required(__VA_ARGS__))
#define __requires_unlocked(...) __lock_annotate(locks_excluded(__VA_ARGS__))
#define __restrict restrict
#define __restrict_arr restrict
#define __result_use_check __attribute__((__warn_unused_result__))
#define __returns_twice __attribute__((__returns_twice__))
#define __scanflike(fmtarg,firstvararg) __attribute__((__format__ (__scanf__, fmtarg, firstvararg)))
#define __sclearerr(p) ((void)((p)->_flags &= ~(__SERR|__SEOF)))
#define __section(x) __attribute__((__section__(x)))
#define __sfeof(p) ((int)(((p)->_flags & __SEOF) != 0))
#define __sferror(p) ((int)(((p)->_flags & __SERR) != 0))
#define __sfileno(p) ((p)->_file)
#define __sgetc_raw_r(__ptr,__f) (--(__f)->_r < 0 ? __srget_r(__ptr, __f) : (int)(*(__f)->_p++))
#define __signed signed
#define __size_t__ 
#define __stdcall __attribute__((__stdcall__))
#define __strfmonlike(fmtarg,firstvararg) __attribute__((__format__ (__strfmon__, fmtarg, firstvararg)))
#define __strftimelike(fmtarg,firstvararg) __attribute__((__format__ (__strftime__, fmtarg, firstvararg)))
#define __strong_reference(sym,aliassym) extern __typeof (sym) aliassym __attribute__ ((__alias__ (#sym)))
#define __thiscall __attribute__((__thiscall__))
#define __trylocks_exclusive(...) __lock_annotate(exclusive_trylock_function(__VA_ARGS__))
#define __trylocks_shared(...) __lock_annotate(shared_trylock_function(__VA_ARGS__))
#define __unbounded 
#define __unix 1
#define __unix__ 1
#define __unlocks(...) __lock_annotate(unlock_function(__VA_ARGS__))
#define __unreachable() __builtin_unreachable()
#define __unused __attribute__((__unused__))
#define __used __attribute__((__used__))
#define __volatile volatile
#define __warn_references(sym,msg) __asm__(".stabs \"" msg "\",30,0,0,0"); __asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __wchar_t__ 
#define __weak_reference(sym,alias) __asm__(".stabs \"_" #alias "\",11,0,0,0"); __asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __weak_symbol __attribute__((__weak__))
#define __x86_64 1
#define __x86_64__ 1
#define _cdecl __attribute__((__cdecl__))
#define _fastcall __attribute__((__fastcall__))
#define _flockfile(fp) ({ if (!((fp)->_flags & __SSTR)) __cygwin_lock_lock ((_LOCK_T *)&(fp)->_lock); })
#define _fpos64_t _fpos_t
#define _ftrylockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __cygwin_lock_trylock ((_LOCK_T *)&(fp)->_lock))
#define _funlockfile(fp) ({ if (!((fp)->_flags & __SSTR)) __cygwin_lock_unlock ((_LOCK_T *)&(fp)->_lock); })
#define _stdcall __attribute__((__stdcall__))
#define _stderr_r(x) _REENT_STDERR(x)
#define _stdin_r(x) _REENT_STDIN(x)
#define _stdout_r(x) _REENT_STDOUT(x)
#define _thiscall __attribute__((__thiscall__))
#define clearerr(p) __sclearerr(p)
#define clearerr_unlocked(p) __sclearerr(p)
#define fast_putc(x,p) (--(p)->_w < 0 ? __swbuf_r(_REENT, (int)(x), p) == EOF : (*(p)->_p = (x), (p)->_p++, 0))
#define feof(p) __sfeof(p)
#define feof_unlocked(p) __sfeof(p)
#define ferror(p) __sferror(p)
#define ferror_unlocked(p) __sferror(p)
#define fropen(__cookie,__fn) funopen(__cookie, __fn, NULL, NULL, NULL)
#define fwopen(__cookie,__fn) funopen(__cookie, NULL, __fn, NULL, NULL)
#define getchar_unlocked() _getchar_unlocked()
#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
#define putchar_unlocked(_c) _putchar_unlocked(_c)
#define stderr _REENT_STDERR(_REENT)
#define stdin _REENT_STDIN(_REENT)
#define stdout _REENT_STDOUT(_REENT)
#define unix 1
